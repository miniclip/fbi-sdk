{"version":3,"sources":["webpack://MCInstant/webpack/universalModuleDefinition","webpack://MCInstant/webpack/bootstrap","webpack://MCInstant/./node_modules/axios/lib/utils.js","webpack://MCInstant/./src/services/index.ts","webpack://MCInstant/./src/core/services.ts","webpack://MCInstant/./src/backend/ResponseTypes.ts","webpack://MCInstant/./src/events.ts","webpack://MCInstant/./src/backend/SocketMessageHandler.ts","webpack://MCInstant/./node_modules/axios/lib/defaults.js","webpack://MCInstant/./src/logger.ts","webpack://MCInstant/./node_modules/axios/lib/helpers/bind.js","webpack://MCInstant/./node_modules/axios/lib/adapters/xhr.js","webpack://MCInstant/./node_modules/axios/lib/core/createError.js","webpack://MCInstant/./node_modules/axios/lib/cancel/isCancel.js","webpack://MCInstant/./node_modules/axios/lib/cancel/Cancel.js","webpack://MCInstant/./src/utils/data.ts","webpack://MCInstant/./node_modules/axios-retry/index.js","webpack://MCInstant/./src/models/index.ts","webpack://MCInstant/./src/core/context/index.ts","webpack://MCInstant/./src/index.ts","webpack://MCInstant/./src/MCInstant.ts","webpack://MCInstant/./node_modules/loglevel/lib/loglevel.js","webpack://MCInstant/./src/core/network.ts","webpack://MCInstant/./node_modules/axios/index.js","webpack://MCInstant/./node_modules/axios/lib/axios.js","webpack://MCInstant/./node_modules/is-buffer/index.js","webpack://MCInstant/./node_modules/axios/lib/core/Axios.js","webpack://MCInstant/./node_modules/process/browser.js","webpack://MCInstant/./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack://MCInstant/./node_modules/axios/lib/core/settle.js","webpack://MCInstant/./node_modules/axios/lib/core/enhanceError.js","webpack://MCInstant/./node_modules/axios/lib/helpers/buildURL.js","webpack://MCInstant/./node_modules/axios/lib/helpers/parseHeaders.js","webpack://MCInstant/./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack://MCInstant/./node_modules/axios/lib/helpers/btoa.js","webpack://MCInstant/./node_modules/axios/lib/helpers/cookies.js","webpack://MCInstant/./node_modules/axios/lib/core/InterceptorManager.js","webpack://MCInstant/./node_modules/axios/lib/core/dispatchRequest.js","webpack://MCInstant/./node_modules/axios/lib/core/transformData.js","webpack://MCInstant/./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack://MCInstant/./node_modules/axios/lib/helpers/combineURLs.js","webpack://MCInstant/./node_modules/axios/lib/cancel/CancelToken.js","webpack://MCInstant/./node_modules/axios/lib/helpers/spread.js","webpack://MCInstant/./src/backend/ServerCommsManager.ts","webpack://MCInstant/./src/backend/LoginRequest.ts","webpack://MCInstant/./src/backend/OkRequest.ts","webpack://MCInstant/./src/backend/PingRequest.ts","webpack://MCInstant/./src/backend/Socket.ts","webpack://MCInstant/./src/backend/Utils.ts","webpack://MCInstant/./node_modules/axios-retry/lib/index.js","webpack://MCInstant/./node_modules/is-retry-allowed/index.js","webpack://MCInstant/./src/services/wallet.ts","webpack://MCInstant/./src/utils/dicontainer.ts","webpack://MCInstant/./src/utils/eventemitter.ts","webpack://MCInstant/./src/services/challenges.ts","webpack://MCInstant/./src/models/challenge.ts","webpack://MCInstant/./src/core/context/fbinstant.ts","webpack://MCInstant/./src/services/currencies.ts","webpack://MCInstant/./src/store.ts","webpack://MCInstant/./src/services/session.ts","webpack://MCInstant/./src/utils/instant-storage.ts","webpack://MCInstant/./src/services/messages.ts","webpack://MCInstant/./src/backend/PostRequest.ts","webpack://MCInstant/./src/services/lobby.ts","webpack://MCInstant/./src/backend/OnlineFriendsRequest.ts","webpack://MCInstant/./src/services/mailbox.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isBuffer","toString","isArray","val","isObject","isFunction","forEach","obj","fn","length","isArrayBuffer","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isUndefined","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","navigator","product","document","merge","result","assignValue","arguments","extend","a","b","thisArg","trim","str","replace","Modules","BaseService","[object Object]","this","container","events","ResponseTypes","EVENT_CHALLENGE_ENDED","EVENT_WALLET_BALANCE_UPDATED","EVENT_WS_CONNECTED","EVENT_FRIEND_ONLINE","ResponseTypes_1","SocketMessageHandler","socket","handlers","Map","postHandlers","registerHandler","ev","data","message","JSON","parse","type","handler","POST","postMessage","id","callback","typeHandlers","push","Array","set","index","indexOf","splice","process","utils","normalizeHeaderName","DEFAULT_CONTENT_TYPE","Content-Type","setContentTypeIfUnset","headers","adapter","defaults","XMLHttpRequest","transformRequest","stringify","transformResponse","e","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","status","common","Accept","method","log","instanceCount","LogLevel","originalFactory","methodFactory","noop","methodName","logLevel","loggerName","rawMethod","messages","toUpperCase","apply","undefined","getLogger","instanceNumber","loggerFromLoggingFunc","loggingFunc","logger","threshold","level","DEBUG","INFO","WARN","ERROR","msg","map","join","args","settle","buildURL","parseHeaders","isURLSameOrigin","createError","btoa","config","Promise","resolve","reject","requestData","requestHeaders","request","loadEvent","xDomain","XDomainRequest","url","onprogress","ontimeout","auth","username","password","Authorization","open","params","paramsSerializer","readyState","responseURL","responseHeaders","getAllResponseHeaders","response","responseType","responseText","statusText","onerror","cookies","xsrfValue","withCredentials","read","toLowerCase","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","then","cancel","abort","send","enhanceError","code","error","Error","__CANCEL__","Cancel","CallbackContainer","callbacks","identifier","findIndex","hasFor","idx","Action","listeners","Action1","arg0","Action2","arg1","default","challenge_1","Challenge","fbinstant_1","MCContext","_handler","getOtherPlayers","getFriends","_instance","__export","logger_1","network_1","wallet_1","services_1","dicontainer_1","challenges_1","currencies_1","store_1","session_1","instant_storage_1","messages_1","events_1","lobby_1","mailbox_1","MCInstant","environment","MCIEnvironment","PRODUCTION","app_id","challenge_reward","currency","currencies","realtime","di","setLevel","_store","GLOBAL_STORE","Store","_currencies","CurrencyService","clear","addCurrencies","network","NetworkManager","NETWORK","MESSAGES","MessagesService","SESSION","SessionService","INSTANT_STORAGE","InstantStorage","CURRENCIES","WALLET","WalletService","CHALLENGES","ChallengeService","LOBBY","LobbyService","MAILBOX","MailboxService","boot","challenges","wallet","publicWallet","lobby","mailbox","connect","emit","console","version","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","definition","undefinedType","logMethods","bindMethod","Function","replaceLoggingMethods","debug","defaultMethodFactory","realMethod","Logger","defaultLevel","currentLevel","self","storageKey","getPersistedLevel","storedLevel","localStorage","ignore","cookie","location","encodeURIComponent","exec","slice","levels","TRACE","SILENT","getLevel","persist","levelNum","levelName","persistLevelIfPossible","setDefaultLevel","enableAll","disableAll","initialLevel","defaultLogger","_loggersByName","TypeError","_log","noConflict","getLoggers","__awaiter","_arguments","P","generator","fulfilled","step","next","rejected","done","axios_1","ServerCommsManager_1","Socket_1","axiosRetry","isNetworkOrIdempotentRequestError","AUTH_TOKEY_KEY","HEADER_AUTH_TOKEN","HEADER_FB_SIGNATURE","store","axios","baseURL","getAPIEndpointURL","interceptors","use","getSignedMessage","getSignature","catch","authToken","err","retries","retryCondition","retryDelay","retryCount","serverComm","ServerCommsManager","Socket","getWSEndpointURL","post","put","delete","FBInstant","player","getSignedPlayerInfoAsync","baseurl","Axios","createInstance","defaultConfig","context","instance","instanceConfig","CancelToken","isCancel","all","promises","spread","constructor","readFloatLE","isSlowBuffer","_isBuffer","InterceptorManager","dispatchRequest","chain","interceptor","unshift","shift","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","len","run","marker","runClearTimeout","Item","array","nextTick","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","normalizedName","encode","serializedParams","parts","v","toISOString","ignoreDuplicateOf","parsed","split","line","substr","originURL","msie","test","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","pathname","charAt","requestURL","chars","E","input","block","charCode","String","output","charCodeAt","write","expires","path","domain","secure","Date","toGMTString","match","RegExp","decodeURIComponent","remove","now","eject","h","transformData","isAbsoluteURL","combineURLs","throwIfCancellationRequested","throwIfRequested","reason","fns","relativeURL","executor","resolvePromise","token","source","arr","LoginRequest_1","OkRequest_1","PingRequest_1","SocketMessageHandler_1","data_1","EMPTY_FUNC","appID","super","isLoggedIn","onConnect","onSocketOpen","onSocketClosed","loginRequest","LoginRequest","pingRequest","PingRequest","requestsQueue","payload","okConfirmation","OkRequest","requestID","sender_id","loginSuccess","resolveRequests","stop","pop","messageHandler","nTries","handleError","unregisterHandler","LOGIN_SUCCESS","handleSuccess","LOGIN_FAILURE","sendMessage","signature","x-fb-signature","recipientID","recipient_id","OK","delay","timer","setInterval","clearInterval","Utils_1","connectToServer","WebSocket","onopen","callHandlers","onmessage","onclose","getRetryMSDelay","nRetries","Math","random","isNetworkError","isRetryableError","isSafeRequestError","isIdempotentRequestError","exponentialDelay","_isRetryAllowed","_isRetryAllowed2","namespace","Boolean","SAFE_HTTP_METHODS","IDEMPOTENT_HTTP_METHODS","noDelay","retryNumber","pow","getCurrentState","currentState","defaultOptions","lastRequestTime","_getRequestOptions","assign","getRequestOptions","_getRequestOptions$re","_getRequestOptions$re2","_getRequestOptions$re3","_getRequestOptions$sh","shouldResetTimeout","agent","httpAgent","httpsAgent","fixConfig","lastRequestDuration","max","WHITELIST","BLACKLIST","_1","WALLET_STORAGE_KEY","_wallet","_cloud","reduce","cur","filter","keys","resp","balance","flush","success","setBalance","getBalance","currentValue","_publicWallet","PublicWallet","amount","addBalance","updateBalance","eventemitter_1","EventEmitter","module_name","_boot","event","listener","models_1","initialized","initialFetchResolver","initialFetch","playerId","getID","challenge","consumeChallenge","updateList","list","context_id","getAll","find","contextId","challengeId","loadShareToken","previous","getByChallengeId","score","duration","playerID","setDuration","setScore","setContext","scores","playerIds","getScore","sort","isFinite","getPlayerId","time_left","reward","winner","hasPlayerWon","won","context_1","current_player_id","_currentPlayer","_originalScore","_data","end_ts","updated_ts","_session","_network","challenge_id","other_player_id","player_id","getPlayerScore","NaN","hasScore","getOpponentId","floor","getTime","expired","updated_at","tmp","timezone_offset","getTimezoneOffset","challengeData","otherPlayers","setData","getName","photo","getPhoto","getCurrentPlayer","getPlayersAsync","results","currentPlayer","players","filteredPlayers","getConnectedPlayersAsync","friends","BASE_CURRENCIES","addCurrency","initial","def_value","state","internalState","publicState","_publicSession","PublicSession","timezoneOffset","syncSession","mergeData","base","PAYLOAD_NS","avatar","setSessionData","target","session","setPublicState","KEY_PREFIX","final_key","getDataAsync","values","content","setDataAsync","flushDataAsync","mcStoragePayload","PostRequest_1","messageID","PostRequest","MessagePayloadWrapper","getWS","registerPostHandler","add","unregisterPostHandler","POST_FAILURE","sendMessageLooper","OnlineFriendsRequest_1","connectedFriends","onlineFriends","listen","onWSConnect","FRIEND_ONLINE","onFriendOnline","updateOnlineFriends","addOnlineFriend","emitEvent","friendInfo","friend","friendIdx","ONLINE_FRIENDS","onlineData","fid","OnlineFriendsRequest","friendsIds","recipient"],"mappings":"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","file":"mcinstant.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"MCInstant\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MCInstant\"] = factory();\n\telse\n\t\troot[\"MCInstant\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n","'use strict';\n\nvar bind = require('./helpers/bind');\nvar isBuffer = require('is-buffer');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Modules;\n(function (Modules) {\n    Modules[\"NETWORK\"] = \"network\";\n    Modules[\"WALLET\"] = \"wallet\";\n    Modules[\"CHALLENGES\"] = \"challenges\";\n    Modules[\"SESSION\"] = \"session\";\n    Modules[\"CURRENCIES\"] = \"currencies\";\n    Modules[\"INSTANT_STORAGE\"] = \"storage\";\n    Modules[\"GLOBAL_STORE\"] = \"global_store\";\n    Modules[\"EVENTS\"] = \"events\";\n    Modules[\"MESSAGES\"] = \"messages\";\n    Modules[\"LOBBY\"] = \"lobby\";\n    Modules[\"MAILBOX\"] = \"mailbox\";\n})(Modules = exports.Modules || (exports.Modules = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass BaseService {\n    constructor() {\n        this.container = null;\n    }\n    _boot() { }\n    setContainer(container) {\n        this.container = container;\n        return this;\n    }\n    get events() {\n        return this.container.events;\n    }\n}\nexports.BaseService = BaseService;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ResponseTypes;\n(function (ResponseTypes) {\n    ResponseTypes[\"ONLINE_FRIENDS\"] = \"online_friends\";\n    ResponseTypes[\"FRIEND_ONLINE\"] = \"friend_online\";\n    ResponseTypes[\"OK\"] = \"ok\";\n    ResponseTypes[\"POST\"] = \"post\";\n    ResponseTypes[\"POST_FAILURE\"] = \"post_failure\";\n    ResponseTypes[\"LOGIN_FAILURE\"] = \"login_failure\";\n    ResponseTypes[\"LOGIN_SUCCESS\"] = \"login_success\";\n})(ResponseTypes = exports.ResponseTypes || (exports.ResponseTypes = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EVENT_CHALLENGE_ENDED = \"challenge_ended\";\nexports.EVENT_WALLET_BALANCE_UPDATED = \"wallet_balance_updated\";\nexports.EVENT_WS_CONNECTED = \"ws_connected\";\nexports.EVENT_FRIEND_ONLINE = \"friend_online\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ResponseTypes_1 = require(\"./ResponseTypes\");\nclass SocketMessageHandler {\n    constructor(socket) {\n        this.handlers = new Map();\n        this.postHandlers = new Map();\n        socket.registerHandler('message', (ev) => {\n            if (ev.data === 'pong') {\n                return;\n            }\n            const message = ev.data ? JSON.parse(ev.data) : null;\n            const handlers = this.handlers.get(message.type);\n            if (handlers) {\n                for (const handler of handlers) {\n                    handler(message);\n                }\n            }\n            if (message.type === ResponseTypes_1.ResponseTypes.POST) {\n                const postMessage = message;\n                const postHandlers = this.postHandlers.get(postMessage.id);\n                if (postHandlers) {\n                    for (const handler of postHandlers) {\n                        handler(message);\n                    }\n                }\n            }\n        });\n    }\n    registerHandler(type, callback) {\n        let typeHandlers = this.handlers.get(type);\n        if (!typeHandlers) {\n            typeHandlers = new Array();\n            typeHandlers.push(callback);\n            this.handlers.set(type, typeHandlers);\n        }\n        else {\n            typeHandlers.push(callback);\n        }\n    }\n    unregisterHandler(type, callback) {\n        const typeHandlers = this.handlers.get(type);\n        if (typeHandlers) {\n            const index = typeHandlers.indexOf(callback);\n            if (index > -1) {\n                typeHandlers.splice(index, 1);\n            }\n        }\n    }\n    registerPostHandler(type, callback) {\n        let typeHandlers = this.postHandlers.get(type);\n        if (!typeHandlers) {\n            typeHandlers = new Array();\n            typeHandlers.push(callback);\n            this.postHandlers.set(type, typeHandlers);\n        }\n        else {\n            typeHandlers.push(callback);\n        }\n    }\n    unregisterPostHandler(type, callback) {\n        const typeHandlers = this.postHandlers.get(type);\n        if (typeHandlers) {\n            const index = typeHandlers.indexOf(callback);\n            if (index > -1) {\n                typeHandlers.splice(index, 1);\n            }\n        }\n    }\n}\nexports.SocketMessageHandler = SocketMessageHandler;\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst log = require(\"loglevel\");\nlet instanceCount = 0;\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[\"ERROR\"] = \"error\";\n    LogLevel[\"WARN\"] = \"warn\";\n    LogLevel[\"INFO\"] = \"info\";\n    LogLevel[\"DEBUG\"] = \"debug\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\nconst originalFactory = log.methodFactory;\nlog.methodFactory = function (methodName, logLevel, loggerName) {\n    const rawMethod = originalFactory(methodName, logLevel, loggerName);\n    return function () {\n        const messages = [`[${methodName.toUpperCase()}]`, loggerName];\n        for (let i = 0; i < arguments.length; i = i + 1) {\n            messages.push(arguments[i]);\n        }\n        rawMethod.apply(undefined, messages);\n    };\n};\nfunction getLogger(name) {\n    const instanceNumber = instanceCount;\n    instanceCount += 1;\n    return log.getLogger(name + instanceNumber);\n}\nexports.getLogger = getLogger;\nfunction isMoreSevere(level, threshold) {\n    if (level === LogLevel.DEBUG) {\n        return threshold <= 1;\n    }\n    if (level === LogLevel.INFO) {\n        return threshold <= 2;\n    }\n    if (level === LogLevel.WARN) {\n        return threshold <= 3;\n    }\n    if (level === LogLevel.ERROR) {\n        return threshold <= 4;\n    }\n    return true;\n}\nfunction noop() { }\n;\nfunction loggerFromLoggingFunc(name, loggingFunc) {\n    const instanceNumber = instanceCount;\n    instanceCount += 1;\n    const logger = log.getLogger(name + instanceNumber);\n    logger.methodFactory = function (methodName, logLevel, loggerName) {\n        if (isMoreSevere(methodName, logLevel)) {\n            return function (...msg) {\n                loggingFunc(methodName, `${loggerName} ${msg.map(m => JSON.stringify(m)).join(' ')}`);\n            };\n        }\n        return noop;\n    };\n    return logger;\n}\nexports.loggerFromLoggingFunc = loggerFromLoggingFunc;\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || require('./../helpers/btoa');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n    var loadEvent = 'onreadystatechange';\n    var xDomain = false;\n\n    // For IE 8/9 CORS support\n    // Only supports POST and GET calls and doesn't returns the response headers.\n    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\n    if (process.env.NODE_ENV !== 'test' &&\n        typeof window !== 'undefined' &&\n        window.XDomainRequest && !('withCredentials' in request) &&\n        !isURLSameOrigin(config.url)) {\n      request = new window.XDomainRequest();\n      loadEvent = 'onload';\n      xDomain = true;\n      request.onprogress = function handleProgress() {};\n      request.ontimeout = function handleTimeout() {};\n    }\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request[loadEvent] = function handleLoad() {\n      if (!request || (request.readyState !== 4 && !xDomain)) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)\n        status: request.status === 1223 ? 204 : request.status,\n        statusText: request.status === 1223 ? 'No Content' : request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass CallbackContainer {\n    constructor() {\n        this.callbacks = {};\n    }\n    add(identifier, callback) {\n        if (!(identifier in this.callbacks)) {\n            this.callbacks[identifier] = [];\n        }\n        let idx = this.callbacks[identifier].findIndex((c) => c == callback);\n        if (idx != -1)\n            return;\n        this.callbacks[identifier].push(callback);\n    }\n    hasFor(identifier) {\n        return identifier in this.callbacks;\n    }\n    get(identifier) {\n        if (!this.hasFor(identifier))\n            return [];\n        return this.callbacks[identifier];\n    }\n    remove(identifier, callback) {\n        if (!(identifier in this.callbacks))\n            return;\n        let idx = this.callbacks[identifier].findIndex((c) => c == callback);\n        if (idx == -1)\n            return;\n        this.callbacks[identifier].splice(idx, 1);\n        if (this.callbacks[identifier].length == 0) {\n            delete this.callbacks[identifier];\n        }\n    }\n}\nexports.CallbackContainer = CallbackContainer;\nclass Action {\n    constructor() {\n        this.listeners = [];\n    }\n    emit() {\n        this.listeners.forEach((l) => {\n            l();\n        });\n    }\n    listen(callback) {\n        let idx = this.listeners.findIndex((c) => c == callback);\n        if (idx != -1)\n            return;\n        this.listeners.push(callback);\n    }\n    unlisten(callback) {\n        let idx = this.listeners.findIndex((c) => c == callback);\n        if (idx == -1)\n            return;\n        this.listeners.splice(idx, 1);\n    }\n    clear() {\n        this.listeners = [];\n    }\n}\nexports.Action = Action;\nclass Action1 {\n    constructor() {\n        this.listeners = [];\n    }\n    emit(arg0) {\n        this.listeners.forEach((l) => {\n            l(arg0);\n        });\n    }\n    listen(callback) {\n        let idx = this.listeners.findIndex((c) => c == callback);\n        if (idx != -1)\n            return;\n        this.listeners.push(callback);\n    }\n    unlisten(callback) {\n        let idx = this.listeners.findIndex((c) => c == callback);\n        if (idx == -1)\n            return;\n        this.listeners.splice(idx, 1);\n    }\n    clear() {\n        this.listeners = [];\n    }\n}\nexports.Action1 = Action1;\nclass Action2 {\n    constructor() {\n        this.listeners = [];\n    }\n    emit(arg0, arg1) {\n        this.listeners.forEach((l) => {\n            l(arg0, arg1);\n        });\n    }\n    listen(callback) {\n        let idx = this.listeners.findIndex((c) => c == callback);\n        if (idx != -1)\n            return;\n        this.listeners.push(callback);\n    }\n    unlisten(callback) {\n        let idx = this.listeners.findIndex((c) => c == callback);\n        if (idx == -1)\n            return;\n        this.listeners.splice(idx, 1);\n    }\n    clear() {\n        this.listeners = [];\n    }\n}\nexports.Action2 = Action2;\n","module.exports = require('./lib/index').default;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar challenge_1 = require(\"./challenge\");\nexports.Challenge = challenge_1.Challenge;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fbinstant_1 = require(\"./fbinstant\");\nclass MCContext {\n    constructor(handler) {\n        this._handler = handler;\n    }\n    getOtherPlayers() {\n        return this._handler.getOtherPlayers();\n    }\n    getFriends() {\n        return this._handler.getFriends();\n    }\n}\nexports.MCContext = MCContext;\nvar handler = new fbinstant_1.default();\nconst _instance = new MCContext(handler);\nexports.default = _instance;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./MCInstant\"));\n__export(require(\"./models\"));\n__export(require(\"./events\"));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst logger_1 = require(\"./logger\");\nconst network_1 = require(\"./core/network\");\nconst wallet_1 = require(\"./services/wallet\");\nconst services_1 = require(\"./services\");\nconst dicontainer_1 = require(\"./utils/dicontainer\");\nconst challenges_1 = require(\"./services/challenges\");\nconst currencies_1 = require(\"./services/currencies\");\nconst store_1 = require(\"./store\");\nconst session_1 = require(\"./services/session\");\nconst instant_storage_1 = require(\"./utils/instant-storage\");\nconst messages_1 = require(\"./services/messages\");\nconst events_1 = require(\"./events\");\nconst lobby_1 = require(\"./services/lobby\");\nconst mailbox_1 = require(\"./services/mailbox\");\nclass MCInstant {\n    constructor({ environment = MCIEnvironment.PRODUCTION, logLevel = logger_1.LogLevel.INFO, app_id = \"\", challenge_reward = { value: 100, currency: \"points\" }, currencies = [\"points\"], realtime = false }) {\n        this.di = new dicontainer_1.default();\n        this.logger = logger_1.getLogger(MCInstant.loggerName);\n        this.logger.setLevel(logLevel);\n        const _store = this.di.bind(services_1.Modules.GLOBAL_STORE, new store_1.Store());\n        const _currencies = new currencies_1.CurrencyService();\n        _currencies.clear();\n        _currencies.addCurrencies(currencies);\n        _store.set(\"challenge_reward\", challenge_reward);\n        const network = new network_1.NetworkManager({\n            app_id: app_id,\n            environment: environment,\n            container: this.di\n        });\n        this.di.bind(services_1.Modules.NETWORK, network);\n        this.di.bind(services_1.Modules.MESSAGES, new messages_1.MessagesService());\n        this.di.bind(services_1.Modules.SESSION, new session_1.SessionService());\n        this.di.bind(services_1.Modules.INSTANT_STORAGE, new instant_storage_1.InstantStorage());\n        this.di.bind(services_1.Modules.CURRENCIES, _currencies);\n        this.di.bind(services_1.Modules.WALLET, new wallet_1.WalletService());\n        this.di.bind(services_1.Modules.CHALLENGES, new challenges_1.ChallengeService());\n        this.di.bind(services_1.Modules.LOBBY, new lobby_1.LobbyService());\n        this.di.bind(services_1.Modules.MAILBOX, new mailbox_1.MailboxService());\n        this.di.boot();\n        this.challenges = this.di.get(services_1.Modules.CHALLENGES);\n        this.wallet = this.di.get(services_1.Modules.WALLET).publicWallet;\n        this.lobby = this.di.get(services_1.Modules.LOBBY);\n        this.messages = this.di.get(services_1.Modules.MESSAGES);\n        this.mailbox = this.di.get(services_1.Modules.MAILBOX);\n        if (realtime) {\n            network.connect().then(() => {\n                this.events.emit(events_1.EVENT_WS_CONNECTED);\n            }, () => {\n                console.log(\"Failed to connect\");\n            });\n        }\n    }\n    get events() {\n        return this.di.events;\n    }\n}\nMCInstant.loggerName = \"mc:instant\";\nMCInstant.version = VERSION;\nexports.MCInstant = MCInstant;\nvar MCIEnvironment;\n(function (MCIEnvironment) {\n    MCIEnvironment[\"PRODUCTION\"] = \"production\";\n    MCIEnvironment[\"SANDBOX\"] = \"sandbox\";\n})(MCIEnvironment = exports.MCIEnvironment || (exports.MCIEnvironment = {}));\n","/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n      var storageKey = \"loglevel\";\n      if (name) {\n        storageKey += \":\" + name;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if (typeof name !== \"string\" || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    return defaultLogger;\n}));\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst axios_1 = require(\"axios\");\nconst services_1 = require(\"../services\");\nconst ServerCommsManager_1 = require(\"../backend/ServerCommsManager\");\nconst Socket_1 = require(\"../backend/Socket\");\nconst axiosRetry = require('axios-retry');\nconst { isNetworkOrIdempotentRequestError } = require('axios-retry');\nconst AUTH_TOKEY_KEY = \"auth-token\";\nconst HEADER_AUTH_TOKEN = \"x-auth-token\";\nconst HEADER_FB_SIGNATURE = \"x-fb-signature\";\nclass NetworkManager {\n    constructor({ environment = \"production\", container, app_id }) {\n        this.store = container.get(services_1.Modules.GLOBAL_STORE);\n        this.axios = axios_1.default.create({\n            baseURL: this.getAPIEndpointURL(environment, app_id)\n        });\n        this.axios.interceptors.request.use(config => {\n            config.headers['Content-Type'] = 'application/json';\n            return new Promise((resolve) => {\n                if (this.store.get(AUTH_TOKEY_KEY)) {\n                    config.headers[HEADER_AUTH_TOKEN] = this.store.get(AUTH_TOKEY_KEY);\n                    resolve(config);\n                }\n                else {\n                    this.getSignedMessage().then((result) => {\n                        config.headers[HEADER_FB_SIGNATURE] = result.getSignature();\n                        resolve(config);\n                    }).catch(() => {\n                        resolve(config);\n                    });\n                }\n            });\n        });\n        this.axios.interceptors.response.use((response) => {\n            let status = response.status;\n            if ((status >= 200 && status <= 299)) {\n                const authToken = response.headers[HEADER_AUTH_TOKEN];\n                if (authToken) {\n                    this.store.set(AUTH_TOKEY_KEY, authToken);\n                }\n            }\n            return response;\n        }, (error) => __awaiter(this, void 0, void 0, function* () {\n            if (error.response && error.response.status == 401) {\n                this.store.set(AUTH_TOKEY_KEY, null);\n                try {\n                    let result = yield this.getSignedMessage();\n                    error.config.headers[HEADER_FB_SIGNATURE] = result.getSignature();\n                }\n                catch (err) {\n                    console.error(\"failed to sign request\", err);\n                }\n            }\n            throw error;\n        }));\n        axiosRetry(this.axios, {\n            retries: 3,\n            retryCondition: (error) => {\n                return isNetworkOrIdempotentRequestError(error) || error.response.status == 401;\n            },\n            retryDelay: (retryCount) => {\n                return retryCount * 500;\n            }\n        });\n        this.serverComm = new ServerCommsManager_1.ServerCommsManager(\"\" + app_id, new Socket_1.Socket(this.getWSEndpointURL(environment)));\n    }\n    get(url, config) {\n        return this.axios.get(url, config);\n    }\n    post(url, data, config) {\n        return this.axios.post(url, data, config);\n    }\n    put(url, data, config) {\n        return this.axios.put(url, data, config);\n    }\n    delete(url, config) {\n        return this.axios.delete(url, config);\n    }\n    send(request) {\n        return this.serverComm.send(request);\n    }\n    connect() {\n        return this.serverComm.connect();\n    }\n    getWS() {\n        return this.serverComm;\n    }\n    getSignedMessage() {\n        return FBInstant.player.getSignedPlayerInfoAsync();\n    }\n    getAPIEndpointURL(environment, app_id) {\n        var baseurl = \"\";\n        switch (environment) {\n            case \"development\":\n                baseurl = \"dev-mci-ws\";\n                break;\n            case \"sandbox\":\n                baseurl = \"sandbox-mci-ws\";\n                break;\n            default:\n                baseurl = \"prod-mci-ws\";\n        }\n        return `https://${baseurl}.miniclippt.com/apps/${app_id}`;\n    }\n    getWSEndpointURL(environment) {\n        var baseurl = \"\";\n        switch (environment) {\n            case \"development\":\n                baseurl = \"dev\";\n                break;\n            default:\n                baseurl = \"prod\";\n        }\n        return `wss://${baseurl}-mci-os.miniclippt.com/ws`;\n    }\n}\nexports.NetworkManager = NetworkManager;\n","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(utils.merge(defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","'use strict';\n\nvar defaults = require('./../defaults');\nvar utils = require('./../utils');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);\n  config.method = config.method.toLowerCase();\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  // Note: status is not exposed by XDomainRequest\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n  error.request = request;\n  error.response = response;\n  return error;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\n    var urlParsingNode = document.createElement('a');\n    var originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      var href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n                  urlParsingNode.pathname :\n                  '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })()\n);\n","'use strict';\n\n// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction E() {\n  this.message = 'String contains an invalid character';\n}\nE.prototype = new Error;\nE.prototype.code = 5;\nE.prototype.name = 'InvalidCharacterError';\n\nfunction btoa(input) {\n  var str = String(input);\n  var output = '';\n  for (\n    // initialize result and counter\n    var block, charCode, idx = 0, map = chars;\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n  ) {\n    charCode = str.charCodeAt(idx += 3 / 4);\n    if (charCode > 0xFF) {\n      throw new E();\n    }\n    block = block << 8 | charCode;\n  }\n  return output;\n}\n\nmodule.exports = btoa;\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        var cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\nvar combineURLs = require('./../helpers/combineURLs');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst LoginRequest_1 = require(\"./LoginRequest\");\nconst OkRequest_1 = require(\"./OkRequest\");\nconst PingRequest_1 = require(\"./PingRequest\");\nconst ResponseTypes_1 = require(\"./ResponseTypes\");\nconst SocketMessageHandler_1 = require(\"./SocketMessageHandler\");\nconst data_1 = require(\"@/utils/data\");\nconst EMPTY_FUNC = () => { };\nclass ServerCommsManager extends SocketMessageHandler_1.SocketMessageHandler {\n    constructor(appID, socket) {\n        super(socket);\n        this.isLoggedIn = false;\n        this.onConnect = new data_1.Action();\n        this.socket = socket;\n        this.socket.registerHandler('open', () => this.onSocketOpen());\n        this.socket.registerHandler('close', () => this.onSocketClosed());\n        this.loginRequest = new LoginRequest_1.LoginRequest(appID);\n        this.pingRequest = new PingRequest_1.PingRequest();\n        this.requestsQueue = new Array();\n        this.registerHandler(ResponseTypes_1.ResponseTypes.POST, (message) => {\n            if (message.payload.okConfirmation) {\n                this.send(new OkRequest_1.OkRequest(message.payload.requestID, message.sender_id)).then(EMPTY_FUNC, EMPTY_FUNC);\n            }\n        });\n    }\n    connect() {\n        return new Promise((resolve, reject) => {\n            this.requestsQueue.push((loginSuccess) => {\n                if (loginSuccess) {\n                    this.onConnect.emit();\n                    resolve();\n                }\n                else {\n                    reject();\n                }\n            });\n            this.socket.connect();\n        });\n    }\n    onSocketOpen() {\n        this.loginRequest.send(this.socket).then(() => {\n            this.isLoggedIn = true;\n            this.pingRequest.send(this.socket).then(EMPTY_FUNC, EMPTY_FUNC);\n            this.resolveRequests(true);\n        }, () => this.resolveRequests(false));\n    }\n    onSocketClosed() {\n        this.isLoggedIn = false;\n        this.pingRequest.stop();\n    }\n    resolveRequests(loginSuccess) {\n        while (this.requestsQueue.length > 0) {\n            const request = this.requestsQueue.pop();\n            if (request) {\n                request(loginSuccess);\n            }\n        }\n    }\n    send(request) {\n        return new Promise((resolve, reject) => {\n            if (this.isLoggedIn) {\n                request.send(this.socket).then(resolve, reject);\n            }\n            else {\n                this.requestsQueue.push((loginSuccess) => {\n                    if (loginSuccess) {\n                        request.send(this.socket).then(resolve, reject);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            }\n        });\n    }\n}\nexports.ServerCommsManager = ServerCommsManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ResponseTypes_1 = require(\"./ResponseTypes\");\nconst SocketMessageHandler_1 = require(\"./SocketMessageHandler\");\nclass LoginRequest {\n    constructor(appID, retries = 2) {\n        this.appID = appID;\n        this.retries = retries;\n    }\n    send(socket) {\n        const messageHandler = new SocketMessageHandler_1.SocketMessageHandler(socket);\n        let nTries = 0;\n        return new Promise((resolve, reject) => {\n            this.handleError = () => {\n                messageHandler.unregisterHandler(ResponseTypes_1.ResponseTypes.LOGIN_SUCCESS, this.handleSuccess);\n                messageHandler.unregisterHandler(ResponseTypes_1.ResponseTypes.LOGIN_FAILURE, this.handleError);\n                socket.unregisterHandler('error', this.sendMessage);\n                reject();\n            };\n            this.sendMessage = () => {\n                if (nTries++ > this.retries) {\n                    this.handleError();\n                    return;\n                }\n                this.getSignature().then(() => {\n                    socket.send(this.stringify());\n                }, this.sendMessage);\n            };\n            this.handleSuccess = () => resolve();\n            messageHandler.registerHandler(ResponseTypes_1.ResponseTypes.LOGIN_SUCCESS, this.handleSuccess);\n            messageHandler.registerHandler(ResponseTypes_1.ResponseTypes.LOGIN_FAILURE, this.handleError);\n            socket.registerHandler('error', this.sendMessage);\n            this.sendMessage();\n        });\n    }\n    getSignature() {\n        if (this.signature) {\n            return Promise.resolve();\n        }\n        return new Promise((resolve, reject) => {\n            window.FBInstant.player.getSignedPlayerInfoAsync().then((result) => {\n                this.signature = result.getSignature();\n                resolve();\n            }, reject);\n        });\n    }\n    stringify() {\n        const request = {\n            type: 'login',\n            app_id: this.appID,\n            'x-fb-signature': this.signature,\n        };\n        return JSON.stringify(request);\n    }\n}\nexports.LoginRequest = LoginRequest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ResponseTypes_1 = require(\"./ResponseTypes\");\nclass OkRequest {\n    constructor(requestID, recipientID) {\n        this.requestID = requestID;\n        this.recipientID = recipientID;\n    }\n    send(socket) {\n        socket.send(this.stringify());\n        return Promise.resolve();\n    }\n    stringify() {\n        return JSON.stringify({\n            type: ResponseTypes_1.ResponseTypes.POST,\n            recipient_id: this.recipientID,\n            payload: {\n                requestID: this.requestID,\n            },\n            id: ResponseTypes_1.ResponseTypes.OK,\n        });\n    }\n}\nexports.OkRequest = OkRequest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass PingRequest {\n    constructor(delay = 5000) {\n        this.delay = delay;\n    }\n    send(socket) {\n        this.stop();\n        this.timer = setInterval(() => {\n            socket.send('ping');\n        }, this.delay);\n        return Promise.resolve();\n    }\n    stop() {\n        clearInterval(this.timer);\n    }\n}\nexports.PingRequest = PingRequest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Utils_1 = require(\"./Utils\");\nclass Socket {\n    constructor(url) {\n        this.handlers = new Map();\n        this.url = url;\n    }\n    registerHandler(type, callback) {\n        let typeHandlers = this.handlers.get(type);\n        if (!typeHandlers) {\n            typeHandlers = new Array();\n            typeHandlers.push(callback);\n            this.handlers.set(type, typeHandlers);\n        }\n        else {\n            typeHandlers.push(callback);\n        }\n    }\n    unregisterHandler(type, callback) {\n        const typeHandlers = this.handlers.get(type);\n        if (typeHandlers) {\n            const index = typeHandlers.indexOf(callback);\n            if (index > -1) {\n                typeHandlers.splice(index, 1);\n            }\n        }\n    }\n    connect(retries = 5) {\n        if (this.socket && this.socket.readyState === 1) {\n            return;\n        }\n        let nTries = 0;\n        const connectToServer = () => {\n            this.socket = new WebSocket(this.url);\n            this.socket.onopen = (ev) => {\n                nTries = 0;\n                this.callHandlers('open', ev);\n            };\n            this.socket.onerror = (ev) => {\n                this.callHandlers('error', ev);\n            };\n            this.socket.onmessage = (ev) => {\n                this.callHandlers('message', ev);\n            };\n            this.socket.onclose = (ev) => {\n                this.callHandlers('close', ev);\n                if (++nTries <= retries) {\n                    setTimeout(() => {\n                        connectToServer();\n                    }, Utils_1.getRetryMSDelay(nTries));\n                }\n            };\n        };\n        connectToServer();\n    }\n    callHandlers(type, data) {\n        if (type) {\n            const handlers = this.handlers.get(type);\n            if (handlers) {\n                for (const handler of handlers) {\n                    handler(data);\n                }\n            }\n        }\n    }\n    send(message) {\n        if (this.socket && this.socket.readyState === 1) {\n            this.socket.send(message);\n        }\n    }\n}\nexports.Socket = Socket;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getRetryMSDelay(nRetries) {\n    return (nRetries + (Math.random() * 2 * nRetries)) * 1000;\n}\nexports.getRetryMSDelay = getRetryMSDelay;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isNetworkError = isNetworkError;\nexports.isRetryableError = isRetryableError;\nexports.isSafeRequestError = isSafeRequestError;\nexports.isIdempotentRequestError = isIdempotentRequestError;\nexports.isNetworkOrIdempotentRequestError = isNetworkOrIdempotentRequestError;\nexports.exponentialDelay = exponentialDelay;\nexports.default = axiosRetry;\n\nvar _isRetryAllowed = require('is-retry-allowed');\n\nvar _isRetryAllowed2 = _interopRequireDefault(_isRetryAllowed);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar namespace = 'axios-retry';\n\n/**\n * @param  {Error}  error\n * @return {boolean}\n */\nfunction isNetworkError(error) {\n  return !error.response && Boolean(error.code) && // Prevents retrying cancelled requests\n  error.code !== 'ECONNABORTED' && // Prevents retrying timed out requests\n  (0, _isRetryAllowed2.default)(error); // Prevents retrying unsafe errors\n}\n\nvar SAFE_HTTP_METHODS = ['get', 'head', 'options'];\nvar IDEMPOTENT_HTTP_METHODS = SAFE_HTTP_METHODS.concat(['put', 'delete']);\n\n/**\n * @param  {Error}  error\n * @return {boolean}\n */\nfunction isRetryableError(error) {\n  return error.code !== 'ECONNABORTED' && (!error.response || error.response.status >= 500 && error.response.status <= 599);\n}\n\n/**\n * @param  {Error}  error\n * @return {boolean}\n */\nfunction isSafeRequestError(error) {\n  if (!error.config) {\n    // Cannot determine if the request can be retried\n    return false;\n  }\n\n  return isRetryableError(error) && SAFE_HTTP_METHODS.indexOf(error.config.method) !== -1;\n}\n\n/**\n * @param  {Error}  error\n * @return {boolean}\n */\nfunction isIdempotentRequestError(error) {\n  if (!error.config) {\n    // Cannot determine if the request can be retried\n    return false;\n  }\n\n  return isRetryableError(error) && IDEMPOTENT_HTTP_METHODS.indexOf(error.config.method) !== -1;\n}\n\n/**\n * @param  {Error}  error\n * @return {boolean}\n */\nfunction isNetworkOrIdempotentRequestError(error) {\n  return isNetworkError(error) || isIdempotentRequestError(error);\n}\n\n/**\n * @return {number} - delay in milliseconds, always 0\n */\nfunction noDelay() {\n  return 0;\n}\n\n/**\n * @param  {number} [retryNumber=0]\n * @return {number} - delay in milliseconds\n */\nfunction exponentialDelay() {\n  var retryNumber = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n  var delay = Math.pow(2, retryNumber) * 100;\n  var randomSum = delay * 0.2 * Math.random(); // 0-20% of the delay\n  return delay + randomSum;\n}\n\n/**\n * Initializes and returns the retry state for the given request/config\n * @param  {AxiosRequestConfig} config\n * @return {Object}\n */\nfunction getCurrentState(config) {\n  var currentState = config[namespace] || {};\n  currentState.retryCount = currentState.retryCount || 0;\n  config[namespace] = currentState;\n  return currentState;\n}\n\n/**\n * Returns the axios-retry options for the current request\n * @param  {AxiosRequestConfig} config\n * @param  {AxiosRetryConfig} defaultOptions\n * @return {AxiosRetryConfig}\n */\nfunction getRequestOptions(config, defaultOptions) {\n  return Object.assign({}, defaultOptions, config[namespace]);\n}\n\n/**\n * @param  {Axios} axios\n * @param  {AxiosRequestConfig} config\n */\nfunction fixConfig(axios, config) {\n  if (axios.defaults.agent === config.agent) {\n    delete config.agent;\n  }\n  if (axios.defaults.httpAgent === config.httpAgent) {\n    delete config.httpAgent;\n  }\n  if (axios.defaults.httpsAgent === config.httpsAgent) {\n    delete config.httpsAgent;\n  }\n}\n\n/**\n * Adds response interceptors to an axios instance to retry requests failed due to network issues\n *\n * @example\n *\n * import axios from 'axios';\n *\n * axiosRetry(axios, { retries: 3 });\n *\n * axios.get('http://example.com/test') // The first request fails and the second returns 'ok'\n *   .then(result => {\n *     result.data; // 'ok'\n *   });\n *\n * // Exponential back-off retry delay between requests\n * axiosRetry(axios, { retryDelay : axiosRetry.exponentialDelay});\n *\n * // Custom retry delay\n * axiosRetry(axios, { retryDelay : (retryCount) => {\n *   return retryCount * 1000;\n * }});\n *\n * // Also works with custom axios instances\n * const client = axios.create({ baseURL: 'http://example.com' });\n * axiosRetry(client, { retries: 3 });\n *\n * client.get('/test') // The first request fails and the second returns 'ok'\n *   .then(result => {\n *     result.data; // 'ok'\n *   });\n *\n * // Allows request-specific configuration\n * client\n *   .get('/test', {\n *     'axios-retry': {\n *       retries: 0\n *     }\n *   })\n *   .catch(error => { // The first request fails\n *     error !== undefined\n *   });\n *\n * @param {Axios} axios An axios instance (the axios object or one created from axios.create)\n * @param {Object} [defaultOptions]\n * @param {number} [defaultOptions.retries=3] Number of retries\n * @param {boolean} [defaultOptions.shouldResetTimeout=false]\n *        Defines if the timeout should be reset between retries\n * @param {Function} [defaultOptions.retryCondition=isNetworkOrIdempotentRequestError]\n *        A function to determine if the error can be retried\n * @param {Function} [defaultOptions.retryDelay=noDelay]\n *        A function to determine the delay between retry requests\n */\nfunction axiosRetry(axios, defaultOptions) {\n  axios.interceptors.request.use(function (config) {\n    var currentState = getCurrentState(config);\n    currentState.lastRequestTime = Date.now();\n    return config;\n  });\n\n  axios.interceptors.response.use(null, function (error) {\n    var config = error.config;\n\n    // If we have no information to retry the request\n    if (!config) {\n      return Promise.reject(error);\n    }\n\n    var _getRequestOptions = getRequestOptions(config, defaultOptions),\n        _getRequestOptions$re = _getRequestOptions.retries,\n        retries = _getRequestOptions$re === undefined ? 3 : _getRequestOptions$re,\n        _getRequestOptions$re2 = _getRequestOptions.retryCondition,\n        retryCondition = _getRequestOptions$re2 === undefined ? isNetworkOrIdempotentRequestError : _getRequestOptions$re2,\n        _getRequestOptions$re3 = _getRequestOptions.retryDelay,\n        retryDelay = _getRequestOptions$re3 === undefined ? noDelay : _getRequestOptions$re3,\n        _getRequestOptions$sh = _getRequestOptions.shouldResetTimeout,\n        shouldResetTimeout = _getRequestOptions$sh === undefined ? false : _getRequestOptions$sh;\n\n    var currentState = getCurrentState(config);\n\n    var shouldRetry = retryCondition(error) && currentState.retryCount < retries;\n\n    if (shouldRetry) {\n      currentState.retryCount += 1;\n      var delay = retryDelay(currentState.retryCount, error);\n\n      // Axios fails merging this configuration to the default configuration because it has an issue\n      // with circular structures: https://github.com/mzabriskie/axios/issues/370\n      fixConfig(axios, config);\n\n      if (!shouldResetTimeout && config.timeout && currentState.lastRequestTime) {\n        var lastRequestDuration = Date.now() - currentState.lastRequestTime;\n        // Minimum 1ms timeout (passing 0 or less to XHR means no timeout)\n        config.timeout = Math.max(config.timeout - lastRequestDuration - delay, 1);\n      }\n\n      config.transformRequest = [function (data) {\n        return data;\n      }];\n\n      return new Promise(function (resolve) {\n        return setTimeout(function () {\n          return resolve(axios(config));\n        }, delay);\n      });\n    }\n\n    return Promise.reject(error);\n  });\n}\n\n// Compatibility with CommonJS\naxiosRetry.isNetworkError = isNetworkError;\naxiosRetry.isSafeRequestError = isSafeRequestError;\naxiosRetry.isIdempotentRequestError = isIdempotentRequestError;\naxiosRetry.isNetworkOrIdempotentRequestError = isNetworkOrIdempotentRequestError;\naxiosRetry.exponentialDelay = exponentialDelay;\naxiosRetry.isRetryableError = isRetryableError;\n//# sourceMappingURL=index.js.map","'use strict';\n\nvar WHITELIST = [\n\t'ETIMEDOUT',\n\t'ECONNRESET',\n\t'EADDRINUSE',\n\t'ESOCKETTIMEDOUT',\n\t'ECONNREFUSED',\n\t'EPIPE'\n];\n\nvar BLACKLIST = [\n\t'ENOTFOUND',\n\t'ENETUNREACH',\n\n\t// SSL errors from https://github.com/nodejs/node/blob/ed3d8b13ee9a705d89f9e0397d9e96519e7e47ac/src/node_crypto.cc#L1950\n\t'UNABLE_TO_GET_ISSUER_CERT',\n\t'UNABLE_TO_GET_CRL',\n\t'UNABLE_TO_DECRYPT_CERT_SIGNATURE',\n\t'UNABLE_TO_DECRYPT_CRL_SIGNATURE',\n\t'UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY',\n\t'CERT_SIGNATURE_FAILURE',\n\t'CRL_SIGNATURE_FAILURE',\n\t'CERT_NOT_YET_VALID',\n\t'CERT_HAS_EXPIRED',\n\t'CRL_NOT_YET_VALID',\n\t'CRL_HAS_EXPIRED',\n\t'ERROR_IN_CERT_NOT_BEFORE_FIELD',\n\t'ERROR_IN_CERT_NOT_AFTER_FIELD',\n\t'ERROR_IN_CRL_LAST_UPDATE_FIELD',\n\t'ERROR_IN_CRL_NEXT_UPDATE_FIELD',\n\t'OUT_OF_MEM',\n\t'DEPTH_ZERO_SELF_SIGNED_CERT',\n\t'SELF_SIGNED_CERT_IN_CHAIN',\n\t'UNABLE_TO_GET_ISSUER_CERT_LOCALLY',\n\t'UNABLE_TO_VERIFY_LEAF_SIGNATURE',\n\t'CERT_CHAIN_TOO_LONG',\n\t'CERT_REVOKED',\n\t'INVALID_CA',\n\t'PATH_LENGTH_EXCEEDED',\n\t'INVALID_PURPOSE',\n\t'CERT_UNTRUSTED',\n\t'CERT_REJECTED'\n];\n\nmodule.exports = function (err) {\n\tif (!err || !err.code) {\n\t\treturn true;\n\t}\n\n\tif (WHITELIST.indexOf(err.code) !== -1) {\n\t\treturn true;\n\t}\n\n\tif (BLACKLIST.indexOf(err.code) !== -1) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _1 = require(\".\");\nconst services_1 = require(\"../core/services\");\nconst events_1 = require(\"../events\");\nconst WALLET_STORAGE_KEY = \"_wallet\";\nclass WalletService extends services_1.BaseService {\n    constructor() {\n        super();\n        this._wallet = {};\n    }\n    _boot() {\n        this._currencies = this.container.get(_1.Modules.CURRENCIES);\n        this._cloud = this.container.get(_1.Modules.INSTANT_STORAGE);\n        this._wallet = this._currencies.get().reduce((callback, cur) => (Object.assign({}, callback, { [cur]: 0 })), {});\n    }\n    get currencies() {\n        return this._wallet;\n    }\n    getBalance(filter) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let currencies = yield this._cloud.get(WALLET_STORAGE_KEY);\n            Object.keys(currencies).forEach((key) => {\n                (currencies[key] == null) && delete currencies[key];\n            });\n            let resp = Object.assign({}, Object.assign(this.currencies, currencies));\n            Object.keys(resp).forEach((key) => {\n                if (filter != undefined && filter.indexOf(key) == -1)\n                    delete resp[key];\n            });\n            return resp;\n        });\n    }\n    setBalance(currency, value) {\n        return new Promise((resolve, reject) => {\n            if (!(currency in this.currencies)) {\n                throw new Error(currency + \" does not exist.\");\n            }\n            let params = {};\n            params[currency] = value;\n            const balance = Object.assign(this.currencies, params);\n            this._cloud.set(WALLET_STORAGE_KEY, balance)\n                .then(this._cloud.flush)\n                .then((success) => {\n                this.events.emit(events_1.EVENT_WALLET_BALANCE_UPDATED);\n                resolve(success);\n            });\n        });\n    }\n    updateBalance(value, currency) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.setBalance(currency, value);\n            }\n            catch (error) {\n                return {};\n            }\n            return yield this.getBalance([currency]);\n        });\n    }\n    addBalance(value, currency) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let balances = yield this.getBalance();\n            let currentValue = balances[currency] || 0;\n            currentValue += value;\n            console.log(\"Add balance by \", value, currency);\n            try {\n                yield this.setBalance(currency, currentValue);\n                return true;\n            }\n            catch (error) {\n                console.error(error);\n            }\n            return false;\n        });\n    }\n    get publicWallet() {\n        if (!this._publicWallet) {\n            this._publicWallet = new PublicWallet(this);\n        }\n        return this._publicWallet;\n    }\n}\nexports.WalletService = WalletService;\nclass PublicWallet {\n    constructor(wallet) {\n        this.wallet = wallet;\n    }\n    getBalance(filter) {\n        return this.wallet.getBalance(filter);\n    }\n    addBalance(amount, currency) {\n        return this.wallet.addBalance(amount, currency);\n    }\n    updateBalance(amount, currency) {\n        return this.wallet.updateBalance(amount, currency);\n    }\n}\nexports.PublicWallet = PublicWallet;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst logger_1 = require(\"../logger\");\nconst eventemitter_1 = require(\"./eventemitter\");\nconst services_1 = require(\"../core/services\");\nclass DIContainer {\n    constructor() {\n        this.modules = {};\n        this.logger = logger_1.getLogger(\"dicontainer\");\n        this.events = new eventemitter_1.EventEmitter();\n    }\n    bind(module_name, instance) {\n        this.modules[module_name] = instance;\n        if (instance instanceof services_1.BaseService) {\n            instance.container = this;\n        }\n        return instance;\n    }\n    get(module_name) {\n        if (module_name in this.modules) {\n            return this.modules[module_name];\n        }\n        throw new Error(`Failed to get ${module_name} module`);\n    }\n    boot() {\n        const services = Object.keys(this.modules);\n        services.forEach((name) => {\n            let instance = this.modules[name];\n            if (instance instanceof services_1.BaseService) {\n                instance._boot();\n            }\n        });\n    }\n}\nexports.default = DIContainer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass EventEmitter {\n    constructor() {\n        this.events = {};\n    }\n    on(event, listener) {\n        if (typeof this.events[event] !== \"object\") {\n            this.events[event] = [];\n        }\n        this.events[event].push(listener);\n        return () => this.removeListener(event, listener);\n    }\n    removeListener(event, listener) {\n        if (typeof this.events[event] !== \"object\") {\n            return;\n        }\n        const idx = this.events[event].indexOf(listener);\n        if (idx > -1) {\n            this.events[event].splice(idx, 1);\n        }\n    }\n    removeAllListeners() {\n        Object.keys(this.events).forEach((event) => this.events[event].splice(0, this.events[event].length));\n    }\n    emit(event, ...args) {\n        if (typeof this.events[event] !== \"object\") {\n            return;\n        }\n        [...this.events[event]].forEach((listener) => listener.apply(this, args));\n    }\n    once(event, listener) {\n        const remove = this.on(event, (...args) => {\n            remove();\n            listener.apply(this, args);\n        });\n        return remove;\n    }\n}\nexports.EventEmitter = EventEmitter;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _1 = require(\".\");\nconst models_1 = require(\"../models\");\nconst services_1 = require(\"../core/services\");\nconst events_1 = require(\"../events\");\nclass ChallengeService extends services_1.BaseService {\n    constructor() {\n        super();\n        this.challenges = [];\n        this.initialized = false;\n        this.initialFetchResolver = null;\n        this.initialFetch = new Promise((resolve) => {\n            this.initialFetchResolver = resolve;\n        });\n    }\n    _boot() {\n        this.wallet = this.container.get(_1.Modules.WALLET);\n        this.network = this.container.get(_1.Modules.NETWORK);\n        this.store = this.container.get(_1.Modules.GLOBAL_STORE);\n    }\n    updateList() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const playerId = FBInstant.player.getID();\n            const url = \"/players/\" + playerId + \"/challenges\";\n            try {\n                const result = yield this.network.get(url);\n                if (!Array.isArray(result.data))\n                    return [];\n                let challenges = result.data;\n                for (let i = 0; i < challenges.length; i++) {\n                    let challenge = new models_1.Challenge(this.container, playerId).parse(challenges[i]);\n                    const consumed = yield this.consumeChallenge(challenge);\n                    if (consumed)\n                        challenge = undefined;\n                    challenges[i] = challenge;\n                }\n                challenges = challenges.filter((e) => e != undefined);\n                this.challenges = challenges.length > 0 ? challenges : [];\n            }\n            catch (error) {\n                console.error(\"Failed to fetch challenges\", error);\n                this.challenges = [];\n            }\n            this.initialized = true;\n            return this.challenges;\n        });\n    }\n    getAll() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve) => {\n                if (!this.initialized) {\n                    this.updateList().then((list) => {\n                        resolve(list);\n                    });\n                    return;\n                }\n                resolve(this.challenges);\n            });\n        });\n    }\n    getByContext(context_id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let challenges = yield this.getAll();\n            return challenges.find(c => c.contextId == context_id);\n        });\n    }\n    getByChallengeId(challengeId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let challenges = yield this.getAll();\n            return challenges.find(c => c.challengeId == challengeId);\n        });\n    }\n    getFromToken(token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let challenge = this.create();\n                if (!challenge.loadShareToken(token)) {\n                    resolve(undefined);\n                }\n                if (challenge.challengeId == undefined) {\n                    resolve(challenge);\n                    return;\n                }\n                let previous = yield this.getByChallengeId(challenge.challengeId);\n                resolve(previous || challenge);\n            }));\n        });\n    }\n    create({ score = 0, duration = 60 * 60 * 24 * 7 } = {}) {\n        let playerID = FBInstant.player.getID();\n        let challenge = new models_1.Challenge(this.container, playerID);\n        challenge\n            .setDuration(duration)\n            .setScore(score)\n            .setContext(FBInstant.context.getID());\n        return challenge;\n    }\n    hasPlayerWon(challenge) {\n        let players = challenge.playerIds;\n        let scores = [];\n        scores = players.map((p) => { return { id: p, 'score': challenge.getScore(p) }; })\n            .sort((a, b) => {\n            if (isFinite(a.score - b.score)) {\n                return b.score - a.score;\n            }\n            else {\n                return (isFinite(a.score)) ? -1 : 1;\n            }\n        });\n        if (scores[0].id == challenge.getPlayerId()) {\n            return true;\n        }\n        return false;\n    }\n    consumeChallenge(challenge) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!challenge || challenge.time_left > 0 || challenge.time_left == -1)\n                return false;\n            const playerId = FBInstant.player.getID();\n            const challengeId = challenge.challengeId;\n            const url = \"/players/\" + playerId + \"/challenges/\" + challengeId;\n            try {\n                const response = yield this.network.delete(url);\n                const status = response.status;\n                if (status < 200 || status > 299)\n                    return true;\n                let reward = this.store.get(\"challenge_reward\", null);\n                const winner = this.hasPlayerWon(challenge);\n                if (reward != null && winner) {\n                    this.wallet.addBalance(reward.value, reward.currency);\n                }\n                let payload = { challenge: challenge.data, won: winner, reward };\n                this.events.emit(events_1.EVENT_CHALLENGE_ENDED, payload);\n                return true;\n            }\n            catch (error) {\n                console.error(\"Failed to consume: \", error);\n            }\n            return false;\n        });\n    }\n}\nexports.ChallengeService = ChallengeService;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst services_1 = require(\"../services\");\nconst context_1 = require(\"../core/context\");\nclass Challenge {\n    constructor(container, current_player_id) {\n        this._currentPlayer = \"\";\n        this._originalScore = 0;\n        this._data = {\n            type: \"challenge\",\n            score: {},\n            duration: 60 * 60 * 24 * 7,\n            context_id: \"\",\n            end_ts: -1,\n            updated_ts: -1,\n            version: 1\n        };\n        this._session = container.get(services_1.Modules.SESSION);\n        this._network = container.get(services_1.Modules.NETWORK);\n        this._currentPlayer = current_player_id;\n    }\n    parse(data) {\n        if (data == null)\n            return undefined;\n        let { end_ts, updated_ts, context_id, challenge_id, other_player_id, player_id } = data;\n        let scores = \"score\" in data ? data[\"score\"] : {};\n        this._data.context_id = context_id || \"\";\n        this._data.score = scores;\n        this._data.end_ts = end_ts || -1;\n        this._data.updated_ts = updated_ts || -1;\n        this._data.challenge_id = challenge_id;\n        this._data.other_player_id = other_player_id;\n        this._data.player_id = player_id;\n        this._originalScore = this.getPlayerScore();\n        return this;\n    }\n    setScore(score) {\n        if (this._currentPlayer == null) {\n            console.error(\"Challenge current player hasn't been set\");\n            return this;\n        }\n        let player_id = this._currentPlayer;\n        this._data.score[player_id] = score;\n        return this;\n    }\n    setDuration(duration) {\n        this._data.duration = duration;\n        return this;\n    }\n    setContext(context_id) {\n        this.data.context_id = context_id;\n        return this;\n    }\n    setChallengeId(challenge_id) {\n        this._data.challenge_id = challenge_id;\n        return this;\n    }\n    hasScore(player_id) {\n        if (player_id == undefined)\n            return false;\n        if (this._data.score && player_id in this._data.score) {\n            return true;\n        }\n        return false;\n    }\n    getScore(player_id) {\n        if (player_id == undefined)\n            return NaN;\n        if (!this.hasScore(player_id))\n            return NaN;\n        return this._data.score[player_id];\n    }\n    getPlayerId() {\n        return this._currentPlayer;\n    }\n    getChallengerId() {\n        return this._data.player_id;\n    }\n    getPlayerScore() {\n        return this.getScore(this.getPlayerId());\n    }\n    playerHasScore() {\n        return this.hasScore(this.getPlayerId());\n    }\n    getOpponentId() {\n        if (this._data.other_player_id && this._data.other_player_id != this._currentPlayer)\n            return this._data.other_player_id;\n        if (this._data.player_id && this._data.player_id != this._currentPlayer)\n            return this._data.player_id;\n        const keys = Object.keys(this._data.score);\n        return keys.find(id => id != this._currentPlayer);\n    }\n    getOpponentScore() {\n        return this.getScore(this.getOpponentId());\n    }\n    opponentHasScore() {\n        return this.hasScore(this.getOpponentId());\n    }\n    get playerIds() {\n        return Object.keys(this._data.score);\n    }\n    get duration() {\n        return this._data.duration;\n    }\n    get time_left() {\n        if (!isFinite(this._data.end_ts) || this._data.end_ts < 0) {\n            return -1;\n        }\n        let now = Math.floor(new Date().getTime() / 1000);\n        return Math.max(0, this._data.end_ts - now);\n    }\n    get expired() {\n        return this.time_left == 0;\n    }\n    get updated_at() {\n        return this._data.updated_ts;\n    }\n    get contextId() {\n        return this._data.context_id;\n    }\n    get challengeId() {\n        return this._data.challenge_id;\n    }\n    get data() {\n        return this._data;\n    }\n    getShareToken() {\n        let token = JSON.stringify(this.data);\n        return token;\n    }\n    loadShareToken(token) {\n        try {\n            if (typeof (token) === \"string\") {\n                let tmp = JSON.parse(token);\n                this._data = tmp;\n            }\n            else if (typeof (token) === \"object\") {\n                this._data = token;\n            }\n        }\n        catch (err) {\n            return false;\n        }\n        return true;\n    }\n    save() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let type = this._data.type;\n            let duration = this._data.duration;\n            let context_id = this.contextId;\n            let timezone_offset = new Date().getTimezoneOffset();\n            let score = this.getPlayerScore();\n            if (score == null) {\n                console.error(\"The score for current player hasn't been set.\");\n                return false;\n            }\n            if (isFinite(this._originalScore)) {\n                score -= this._originalScore;\n            }\n            const playerId = this.getPlayerId();\n            var challengeData = { context_id, score, duration, timezone_offset };\n            try {\n                var result;\n                if (!this.challengeId) {\n                    var otherPlayers = yield context_1.default.getOtherPlayers();\n                    if (otherPlayers.length == 1) {\n                        challengeData['other_player_id'] = otherPlayers[0].id;\n                    }\n                    result = yield this._network.post(`/players/${playerId}/challenges`, challengeData);\n                }\n                else {\n                    result = yield this._network.put(`/players/${playerId}/challenges/${this.challengeId}`, challengeData);\n                }\n                this.parse(result.data);\n                this._session.setData({\n                    type, duration, score,\n                    challengeId: this.challengeId,\n                });\n            }\n            catch (err) {\n                return false;\n            }\n            return true;\n        });\n    }\n    delete() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const playerId = this.getPlayerId();\n            const challengeId = this.challengeId;\n            const url = \"/players/\" + playerId + \"/challenges/\" + challengeId;\n            try {\n                const response = yield this._network.delete(url);\n                const status = response.status;\n                if (status >= 200 && status <= 299)\n                    return true;\n            }\n            catch (err) {\n            }\n            return false;\n        });\n    }\n    toJSON() {\n        return JSON.stringify(this._data);\n    }\n}\nexports.Challenge = Challenge;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass FBContext {\n    getCurrentPlayer() {\n        return new Promise((resolve, reject) => {\n            var player = {\n                id: FBInstant.player.getID(),\n                name: FBInstant.player.getName(),\n                photo: FBInstant.player.getPhoto()\n            };\n            resolve(player);\n        });\n    }\n    getOtherPlayers() {\n        return new Promise((resolve, reject) => {\n            let promises = new Array();\n            promises.push(this.getCurrentPlayer());\n            promises.push(FBInstant.context.getPlayersAsync());\n            Promise.all(promises).then((results) => {\n                let currentPlayer = results[0];\n                let players = results[1];\n                var filteredPlayers = [];\n                players.forEach((p) => {\n                    if (currentPlayer.id == p.getID())\n                        return;\n                    filteredPlayers.push({\n                        id: p.getID(),\n                        name: p.getName(),\n                        photo: p.getPhoto()\n                    });\n                });\n                resolve(filteredPlayers);\n            }, () => {\n                resolve([]);\n            });\n        });\n    }\n    getFriends() {\n        return new Promise((resolve, reject) => {\n            FBInstant.player.getConnectedPlayersAsync().then((players) => {\n                var friends = players.map((p) => {\n                    return {\n                        id: p.getID(),\n                        name: p.getName(),\n                        photo: p.getPhoto()\n                    };\n                });\n                resolve(friends);\n            }, (e) => {\n                resolve([]);\n            });\n        });\n    }\n}\nexports.default = FBContext;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst services_1 = require(\"../core/services\");\nconst BASE_CURRENCIES = [\"points\"];\nclass CurrencyService extends services_1.BaseService {\n    constructor() {\n        super(...arguments);\n        this._currencies = BASE_CURRENCIES.slice(0);\n    }\n    addCurrency(name) {\n        if (this._currencies.find((e) => (e == name)) == undefined) {\n            this._currencies.push(name);\n        }\n    }\n    clear() {\n        this._currencies = [];\n    }\n    addCurrencies(name) {\n        if (Array.isArray(name)) {\n            name.forEach((currency) => {\n                this.addCurrency(currency);\n            });\n        }\n    }\n    get() {\n        return this._currencies;\n    }\n}\nexports.CurrencyService = CurrencyService;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst initialState = {\n    authtoken: undefined\n};\nclass Store {\n    constructor(initial = {}) {\n        this.initial = initial;\n        this.clear();\n    }\n    get(key, def_value) {\n        return this.state.hasOwnProperty(key) ? this.state[key] : def_value;\n    }\n    set(key, value) {\n        this.state[key] = value;\n    }\n    clear() {\n        this.state = this.initial;\n    }\n}\nexports.Store = Store;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst services_1 = require(\"@/core/services\");\nclass SessionService extends services_1.BaseService {\n    constructor() {\n        super();\n        this.internalState = {};\n        this.publicState = {};\n        this._publicSession = new PublicSession(this);\n        this.timezoneOffset = new Date().getTimezoneOffset();\n        this.syncSession();\n    }\n    getPublicSession() {\n        return this._publicSession;\n    }\n    setPublicState(data) {\n        this.publicState = data;\n    }\n    reset() {\n        this.internalState = {};\n    }\n    setData(params) {\n        this.mergeData(this.internalState, params);\n        this.syncSession();\n    }\n    syncSession() {\n        let base = Object.assign({}, this.publicState);\n        base[SessionService.PAYLOAD_NS] = this.internalState;\n        const name = FBInstant.player.getName();\n        const avatar = FBInstant.player.getPhoto();\n        base[\"_mc\"] = { timezone_offset: this.timezoneOffset, name, avatar };\n        FBInstant.setSessionData(base);\n    }\n    mergeData(target, obj) {\n        let keys = Object.keys(obj);\n        keys.forEach(key => {\n            target[key] = obj[key];\n        });\n    }\n}\nSessionService.PAYLOAD_NS = \"mc:sessionPayload\";\nexports.SessionService = SessionService;\nclass PublicSession {\n    constructor(session) {\n        this._session = session;\n    }\n    set(obj) {\n        this._session.setPublicState(obj);\n        this._session.syncSession();\n    }\n}\nexports.PublicSession = PublicSession;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst KEY_PREFIX = \"_mc:\";\nclass InstantStorage {\n    get(key) {\n        const final_key = KEY_PREFIX + key;\n        return FBInstant.player.getDataAsync([final_key]).then((response) => {\n            if (final_key in response) {\n                return response[final_key];\n            }\n            return {};\n        });\n    }\n    set(key, values) {\n        let content = {};\n        const final_key = KEY_PREFIX + key;\n        content[final_key] = values;\n        return FBInstant.player.setDataAsync(content);\n    }\n    flush() {\n        return FBInstant.player.flushDataAsync();\n    }\n}\nInstantStorage.mcStoragePayload = 'mc:instantPayload';\nexports.InstantStorage = InstantStorage;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst services_1 = require(\"../core/services\");\nconst _1 = require(\".\");\nconst PostRequest_1 = require(\"../backend/PostRequest\");\nconst data_1 = require(\"../utils/data\");\nclass MessagesService extends services_1.BaseService {\n    _boot() {\n        this.network = this.container.get(_1.Modules.NETWORK);\n        this.listeners = new data_1.CallbackContainer();\n        this.messageHandler = this.handler.bind(this);\n    }\n    send(messageID, recipientID, payload = null) {\n        return new Promise((resolve, reject) => {\n            var message = new PostRequest_1.PostRequest(messageID, recipientID, new MessagePayloadWrapper(payload));\n            this.network.send(message).then((data) => {\n                resolve(true);\n            }, (err) => {\n                reject(err);\n            });\n        });\n    }\n    listen(messageID, callback) {\n        if (!this.listeners.hasFor(messageID)) {\n            this.network.getWS().registerPostHandler(messageID, this.messageHandler);\n        }\n        this.listeners.add(messageID, callback);\n    }\n    unlisten(messageID, callback) {\n        this.listeners.remove(messageID, callback);\n        if (!this.listeners.hasFor(messageID)) {\n            this.network.getWS().unregisterPostHandler(messageID, this.messageHandler);\n        }\n    }\n    handler(message) {\n        let callbacks = this.listeners.get(message.id);\n        if (callbacks == null)\n            return;\n        callbacks.forEach((c) => {\n            c(message.id, message.sender_id, message.payload.data);\n        });\n    }\n}\nexports.MessagesService = MessagesService;\nclass MessagePayloadWrapper {\n    constructor(payload) {\n        this.data = null;\n        this.data = payload;\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ResponseTypes_1 = require(\"./ResponseTypes\");\nconst SocketMessageHandler_1 = require(\"./SocketMessageHandler\");\nclass PostRequest {\n    constructor(type, recipientID, payload, responseType = ResponseTypes_1.ResponseTypes.OK, retries = 2) {\n        this.type = type;\n        this.recipientID = recipientID;\n        this.responseType = responseType;\n        this.payload = payload || { requestID: '', okConfirmation: false };\n        this.payload.requestID = this.payload.requestID || `${recipientID}_${new Date().getTime()}`;\n        this.payload.okConfirmation = this.responseType === ResponseTypes_1.ResponseTypes.OK;\n        this.retries = retries;\n    }\n    send(socket) {\n        const messageHandler = new SocketMessageHandler_1.SocketMessageHandler(socket);\n        let nTries = 0;\n        return new Promise((resolve, reject) => {\n            const clear = () => {\n                messageHandler.unregisterPostHandler(this.responseType, this.handleSuccess);\n                messageHandler.unregisterHandler(ResponseTypes_1.ResponseTypes.POST_FAILURE, this.handleError);\n                socket.unregisterHandler('close', this.handleError);\n                clearInterval(this.sendMessageLooper);\n                this.sendMessageLooper = undefined;\n            };\n            this.handleSuccess = (message) => {\n                if (message.payload.requestID === this.payload.requestID) {\n                    clear();\n                    resolve(message);\n                }\n            };\n            this.handleError = (err) => {\n                const reason = err != null && \"reason\" in err ? err.reason : \"\";\n                clear();\n                reject(reason);\n            };\n            const sendMessage = () => {\n                if (nTries++ > this.retries) {\n                    clear();\n                    reject();\n                    return;\n                }\n                socket.send(this.stringify());\n                if (!this.responseType) {\n                    resolve();\n                }\n            };\n            if (this.responseType) {\n                messageHandler.registerPostHandler(this.responseType, this.handleSuccess);\n                messageHandler.registerHandler(ResponseTypes_1.ResponseTypes.POST_FAILURE, this.handleError);\n                socket.registerHandler('close', this.handleError);\n                this.sendMessageLooper = setInterval(sendMessage, 1000);\n            }\n            sendMessage();\n        });\n    }\n    stringify() {\n        const request = {\n            type: ResponseTypes_1.ResponseTypes.POST,\n            recipient_id: this.recipientID,\n            payload: this.payload,\n            id: this.type,\n        };\n        return JSON.stringify(request);\n    }\n}\nexports.PostRequest = PostRequest;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst services_1 = require(\"../core/services\");\nconst _1 = require(\".\");\nconst events_1 = require(\"../events\");\nconst context_1 = require(\"../core/context\");\nconst OnlineFriendsRequest_1 = require(\"../backend/OnlineFriendsRequest\");\nconst ResponseTypes_1 = require(\"../backend/ResponseTypes\");\nclass LobbyService extends services_1.BaseService {\n    constructor() {\n        super(...arguments);\n        this.connectedFriends = [];\n        this.onlineFriends = [];\n    }\n    _boot() {\n        this.network = this.container.get(_1.Modules.NETWORK);\n        this.network.getWS().onConnect.listen(this.onWSConnect.bind(this));\n        this.network.getWS().registerHandler(ResponseTypes_1.ResponseTypes.FRIEND_ONLINE, this.onFriendOnline.bind(this));\n    }\n    getOnlineFriends() {\n        return this.onlineFriends;\n    }\n    onWSConnect() {\n        this.updateOnlineFriends();\n    }\n    onFriendOnline(data) {\n        if (data.type != \"friend_online\")\n            return;\n        this.addOnlineFriend(data.player_id);\n    }\n    addOnlineFriend(player_id, emitEvent = true) {\n        const friendInfo = this.connectedFriends.find((p) => p.id == player_id);\n        if (friendInfo == null)\n            return;\n        let friendIdx = this.onlineFriends.findIndex((p) => p.id == player_id);\n        let friend;\n        if (friendIdx == -1) {\n            friend = {\n                id: player_id,\n                name: friendInfo.name,\n                photo: friendInfo.photo,\n                updated_at: new Date().getTime()\n            };\n            this.onlineFriends.push(friend);\n        }\n        else {\n            friend = this.onlineFriends[friendIdx];\n            friend.updated_at = new Date().getTime();\n            this.onlineFriends[friendIdx] = friend;\n        }\n        if (emitEvent) {\n            this.events.emit(events_1.EVENT_FRIEND_ONLINE, friend);\n        }\n    }\n    updateOnlineFriends() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const friends = [];\n            this.connectedFriends = yield context_1.default.getFriends();\n            (this.connectedFriends).forEach((p) => {\n                friends.push(p.id);\n            });\n            this.network.getWS().registerHandler(ResponseTypes_1.ResponseTypes.ONLINE_FRIENDS, (onlineData) => {\n                if (onlineData.type != \"online_friends\")\n                    return;\n                onlineData.friends.forEach((fid) => {\n                    this.addOnlineFriend(fid, false);\n                });\n            });\n            this.network.send(new OnlineFriendsRequest_1.OnlineFriendsRequest(friends));\n        });\n    }\n}\nexports.LobbyService = LobbyService;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ResponseTypes_1 = require(\"./ResponseTypes\");\nconst SocketMessageHandler_1 = require(\"./SocketMessageHandler\");\nclass OnlineFriendsRequest {\n    constructor(friendsIds, retries = 2) {\n        this.friendsIds = friendsIds;\n        this.retries = retries;\n    }\n    send(socket) {\n        const messageHandler = new SocketMessageHandler_1.SocketMessageHandler(socket);\n        let nTries = 0;\n        return new Promise((resolve, reject) => {\n            this.sendMessage = () => {\n                if (nTries++ > this.retries) {\n                    messageHandler.unregisterHandler(ResponseTypes_1.ResponseTypes.ONLINE_FRIENDS, this.handleSuccess);\n                    socket.unregisterHandler('error', this.sendMessage);\n                    reject();\n                    return;\n                }\n                socket.send(this.stringify());\n            };\n            this.handleSuccess = () => resolve();\n            messageHandler.registerHandler(ResponseTypes_1.ResponseTypes.ONLINE_FRIENDS, this.handleSuccess);\n            socket.registerHandler('error', this.sendMessage);\n            this.sendMessage();\n        });\n    }\n    stringify() {\n        const request = {\n            type: 'get_online_friends',\n            friends: this.friendsIds,\n        };\n        return JSON.stringify(request);\n    }\n}\nexports.OnlineFriendsRequest = OnlineFriendsRequest;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst services_1 = require(\"../core/services\");\nconst _1 = require(\".\");\nclass MailboxService extends services_1.BaseService {\n    constructor() {\n        super();\n        this.initialFetchResolver = null;\n        this.initialFetch = new Promise((resolve) => {\n            this.initialFetchResolver = resolve;\n        });\n    }\n    _boot() {\n        this.network = this.container.get(_1.Modules.NETWORK);\n    }\n    send(recipient, message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                const url = \"/players/\" + recipient + \"/mailbox\";\n                try {\n                    const result = yield this.network.put(url, message);\n                    resolve(result);\n                }\n                catch (error) {\n                    console.error(\"Failed to send message to mailbox\", error);\n                    resolve('');\n                }\n            }));\n        });\n    }\n    read() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                const playerId = '1';\n                const url = \"/players/\" + playerId + \"/mailbox\";\n                try {\n                    const result = yield this.network.get(url);\n                    resolve(result);\n                }\n                catch (error) {\n                    console.error(\"Failed to fetch messages from mailbox\", error);\n                    resolve([]);\n                }\n            }));\n        });\n    }\n}\nexports.MailboxService = MailboxService;\n"],"sourceRoot":""}